/* UI Components CSS - Minimal styles for used components only */

/* Button Component */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  white-space: nowrap;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s;
  cursor: pointer;
  border: none;
  outline: none;
  position: relative;
}

.btn:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.btn:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.btn svg {
  pointer-events: none;
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
}

/* Button Variants */
.btn-default {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.btn-default:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.btn-destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
}

.btn-destructive:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.btn-outline {
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

.btn-outline:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.btn-secondary:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.btn-ghost {
  color: hsl(var(--foreground));
}

.btn-ghost:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-link {
  color: hsl(var(--primary));
  text-decoration: underline;
}

.btn-link:hover {
  text-decoration: none;
}

/* Button Sizes */
.btn-sm {
  height: 2rem;
  padding: 0 0.75rem;
  font-size: 0.75rem;
}

.btn-md {
  height: 2.5rem;
  padding: 0 1rem;
}

.btn-lg {
  height: 2.75rem;
  padding: 0 2rem;
  font-size: 1rem;
}

.btn-icon {
  height: 2.5rem;
  width: 2.5rem;
  padding: 0;
}

/* Input Component */
.input {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: 0.375rem;
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  transition: all 0.2s;
}

.input:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
}

.input:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Label Component */
.label {
  font-size: 0.875rem;
  font-weight: 500;
  color: hsl(var(--foreground));
  line-height: 1;
}

/* Separator Component */
.separator {
  width: 100%;
  height: 1px;
  background-color: hsl(var(--border));
}

.separator-vertical {
  width: 1px;
  height: 100%;
  background-color: hsl(var(--border));
}

/* Skeleton Component */
.skeleton {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  background-color: hsl(var(--muted));
  border-radius: 0.375rem;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Toggle Component */
.toggle {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s;
  cursor: pointer;
  border: none;
  outline: none;
  background-color: transparent;
  color: hsl(var(--foreground));
}

.toggle:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.toggle[data-state="on"] {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.toggle:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.toggle:disabled {
  pointer-events: none;
  opacity: 0.5;
}

/* Tooltip Component */
.tooltip-content {
  z-index: 50;
  overflow: hidden;
  border-radius: 0.375rem;
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--popover));
  padding: 0.5rem 0.75rem;
  font-size: 0.75rem;
  color: hsl(var(--popover-foreground));
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  animation-duration: 400ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
}

.tooltip-content[data-state="delayed-open"][data-side="top"] {
  animation-name: slideDownAndFade;
}

.tooltip-content[data-state="delayed-open"][data-side="right"] {
  animation-name: slideLeftAndFade;
}

.tooltip-content[data-state="delayed-open"][data-side="bottom"] {
  animation-name: slideUpAndFade;
}

.tooltip-content[data-state="delayed-open"][data-side="left"] {
  animation-name: slideRightAndFade;
}

@keyframes slideUpAndFade {
  from {
    opacity: 0;
    transform: translateY(2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideRightAndFade {
  from {
    opacity: 0;
    transform: translateX(-2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideLeftAndFade {
  from {
    opacity: 0;
    transform: translateX(2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Toast Component */
.toast {
  position: relative;
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: space-between;
  overflow: hidden;
  border-radius: 0.375rem;
  border: 1px solid hsl(var(--border));
  padding: 1rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

.toast[data-state="open"] {
  animation: slideInFromRight 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.toast[data-state="closed"] {
  animation: hide 100ms ease-in;
}

.toast[data-swipe="move"] {
  transform: translateX(var(--radix-toast-swipe-move-x));
}

.toast[data-swipe="cancel"] {
  transform: translateX(0);
  transition: transform 200ms ease-out;
}

.toast[data-swipe="end"] {
  animation: swipeOut 100ms ease-out;
}

@keyframes hide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideInFromRight {
  from {
    transform: translateX(calc(100% + 1rem));
  }
  to {
    transform: translateX(0);
  }
}

@keyframes swipeOut {
  from {
    transform: translateX(var(--radix-toast-swipe-end-x));
  }
  to {
    transform: translateX(calc(100% + 1rem));
  }
}

.toast-title {
  font-weight: 500;
  font-size: 0.875rem;
}

.toast-description {
  font-size: 0.875rem;
  opacity: 0.9;
}

.toast-action {
  display: inline-flex;
  height: 2rem;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  border-radius: 0.375rem;
  border: 1px solid hsl(var(--border));
  background-color: transparent;
  padding: 0 0.75rem;
  font-size: 0.75rem;
  font-weight: 500;
  transition: all 0.2s;
  cursor: pointer;
}

.toast-action:hover {
  background-color: hsl(var(--secondary));
}

.toast-close {
  position: absolute;
  right: 0.5rem;
  top: 0.5rem;
  border-radius: 0.375rem;
  padding: 0.25rem;
  color: hsl(var(--foreground) / 0.5);
  opacity: 0;
  transition: opacity 0.2s;
  cursor: pointer;
}

.toast:hover .toast-close {
  opacity: 1;
}

.toast-close:hover {
  color: hsl(var(--foreground));
}

/* Dialog Component */
.dialog-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background-color: rgba(0, 0, 0, 0.8);
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.dialog-content {
  position: fixed;
  left: 50%;
  top: 50%;
  z-index: 50;
  display: grid;
  width: 100%;
  max-width: 32rem;
  max-height: 85vh;
  transform: translate(-50%, -50%);
  border-radius: 0.5rem;
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  padding: 1.5rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.dialog-content:focus {
  outline: none;
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Sheet Component */
.sheet-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background-color: rgba(0, 0, 0, 0.8);
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.sheet-content {
  position: fixed;
  z-index: 50;
  gap: 1rem;
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  padding: 1rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.sheet-content:focus {
  outline: none;
}

.sheet-content[data-side="top"] {
  inset: 0 auto auto 0;
  width: 100%;
  border-radius: 0 0 0.5rem 0.5rem;
}

.sheet-content[data-side="bottom"] {
  inset: auto 0 0 auto;
  width: 100%;
  border-radius: 0.5rem 0.5rem 0 0;
}

.sheet-content[data-side="left"] {
  inset: 0 auto auto 0;
  height: 100%;
  width: 20rem;
  border-radius: 0 0.5rem 0.5rem 0;
}

.sheet-content[data-side="right"] {
  inset: 0 0 auto auto;
  height: 100%;
  width: 20rem;
  border-radius: 0.5rem 0 0 0.5rem;
}